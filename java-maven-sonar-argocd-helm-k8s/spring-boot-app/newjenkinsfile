pipeline {
  agent { label 'slave'}
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

stage('Push to nexus') {
      steps {
        withMaven(globalMavenSettingsConfig: 'nexus-cred', jdk: '', maven: '', mavenSettingsConfig: '', traceability: true) {
         sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn deploy'
            }
    }
      }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.201.189.220:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
             environment {
        DOCKER_IMAGE = "harshverma081/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        
      }
      steps {
               withCredentials([usernamePassword(credentialsId:"docker-cred",passwordVariable:"dockerHubPass",usernameVariable:"dockerHubUser")]){
                   sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
                    
                    sh "docker push ${DOCKER_IMAGE}" 
        }
      }
    }
      stage('Update Deployment File') {
       
        
        steps {
                withKubeConfig(caCertificate: '', clusterName: 'my-cluster', contextName: '', credentialsId: 'kube-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://9B8D37BC50E9E03E60C75796C5F82181.gr7.ap-south-1.eks.amazonaws.com') {
                         sh 'kubectl apply -f dep.yaml '
               }
            }
        }
    } 
}
  

              
